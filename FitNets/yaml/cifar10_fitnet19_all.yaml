!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.zca_dataset.ZCA_Dataset {
            preprocessed_dataset: !pkl: "${PYLEARN2_DATA_PATH}/cifar10/pylearn2_gcn_whitened/train.pkl",
            preprocessor: !pkl: "${PYLEARN2_DATA_PATH}/cifar10/pylearn2_gcn_whitened/preprocessor.pkl",
            axes: ['c', 0, 1, 'b']
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 128,
        layers: [
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h0',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 32,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     irange: .005,
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h1',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 32,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     irange: .005,
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h2',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 32,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     irange: .005,
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h3',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 48,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     irange: .005,
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h4',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 48,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [2, 2],
                     pool_stride: [2, 2],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h5',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 80,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h6',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 80,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h7',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 80,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h8',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 80,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h9',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 80,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h10',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 80,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [2, 2],
                     pool_stride: [2, 2],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h11',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 128,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h12',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 128,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h13',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 128,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h14',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 128,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h15',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 128,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [1, 1],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h16',
                     pad: 1,
                     tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     num_channels: 128,
                     num_pieces: 2,
                     kernel_shape: [3, 3],
                     pool_shape: [8, 8],
                     pool_stride: [1, 1],
                     irange: .005,
                     max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.maxout.Maxout {
                    layer_name: 'fc1',
                    irange: .005,
                    num_units: 500,
                    num_pieces: 5,
                    max_col_norm: 1.9
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 10,
                     irange: .005
                 }
                ],
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: &window_shape [32, 32],
            num_channels: 3,
            axes: ['c', 0, 1, 'b'],
        },
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: .005,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.RMSProp        {
          decay: 0.9,
          max_scaling: 100000.0,
        },
        train_iteration_mode: 'even_shuffled_sequential',
        monitor_iteration_mode: 'even_sequential',
        monitoring_dataset:
            {
                'test' : &test !obj:pylearn2.datasets.zca_dataset.ZCA_Dataset {
            preprocessed_dataset: !pkl: "${PYLEARN2_DATA_PATH}/cifar10/pylearn2_gcn_whitened/test.pkl",
            preprocessor: !pkl: "${PYLEARN2_DATA_PATH}/cifar10/pylearn2_gcn_whitened/preprocessor.pkl",
        axes: ['c', 0, 1, 'b']
                          },
            },
        cost: !obj:FitNets.costs.KDCost.KDCost {
          teacher_path: "<path_teacher_pkl>",
          temperature: 3,
          lambda_teach: 4,
          hints: [[10,1]],
        },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 288,
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.window_flip.WindowAndFlip {
            pad_randomized: 8,
            window_shape: *window_shape,
            randomize: [ *train],
            center: [ *test ]
        },
        !obj:FitNets.extensions.TeacherDecayOverEpoch.TeacherDecayOverEpoch {
            start: 5,
            saturate: 400,
            final_lambda_teach: 1
        },
    ],
    save_path: "cifar10_19layers.pkl",
    save_freq: 1
}
